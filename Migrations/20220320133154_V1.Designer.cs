// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat_WEB.Migrations
{
    [DbContext(typeof(KuvarContext))]
    [Migration("20220320133154_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.Jedinica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Jedinice");
                });

            modelBuilder.Entity("Models.Jelo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("BezGlutena")
                        .HasColumnType("bit");

                    b.Property<int>("BrojPorcija")
                        .HasColumnType("int");

                    b.Property<int>("ForeignKeyNV")
                        .HasColumnType("int");

                    b.Property<string>("KratakOpis")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("KuvarID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PodTipID")
                        .HasColumnType("int");

                    b.Property<int>("PorcijaGram")
                        .HasColumnType("int");

                    b.Property<string>("Postupak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreporucenoPiceID")
                        .HasColumnType("int");

                    b.Property<string>("SavetZaJelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serviranje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaJela")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SlozenostID")
                        .HasColumnType("int");

                    b.Property<string>("Video")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Vreme")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ForeignKeyNV")
                        .IsUnique();

                    b.HasIndex("KuvarID");

                    b.HasIndex("PodTipID");

                    b.HasIndex("PreporucenoPiceID");

                    b.HasIndex("SlozenostID");

                    b.ToTable("Jela");
                });

            modelBuilder.Entity("Models.JeloSastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("JeloID")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("KolicinaJedinicaID")
                        .HasColumnType("int");

                    b.Property<int?>("SastojakID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("JeloID");

                    b.HasIndex("KolicinaJedinicaID");

                    b.HasIndex("SastojakID");

                    b.ToTable("JelaSastojci");
                });

            modelBuilder.Entity("Models.Kuvar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Citat")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Kuvar");
                });

            modelBuilder.Entity("Models.NutritivneVrednosti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Kalorije")
                        .HasColumnType("int");

                    b.Property<string>("KalorijeObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KalorijeProcenti")
                        .HasColumnType("int");

                    b.Property<int>("Masti")
                        .HasColumnType("int");

                    b.Property<string>("MastiObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MastiProcenti")
                        .HasColumnType("int");

                    b.Property<int>("Proteini")
                        .HasColumnType("int");

                    b.Property<string>("ProteiniObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProteiniProcenti")
                        .HasColumnType("int");

                    b.Property<int>("Seceri")
                        .HasColumnType("int");

                    b.Property<string>("SeceriObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeceriProcenti")
                        .HasColumnType("int");

                    b.Property<int>("Soli")
                        .HasColumnType("int");

                    b.Property<string>("SoliObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoliProcenti")
                        .HasColumnType("int");

                    b.Property<int>("UgljeniHidrati")
                        .HasColumnType("int");

                    b.Property<string>("UgljeniHidratiObjasenjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UgljeniHidratiProcenti")
                        .HasColumnType("int");

                    b.Property<int>("Vlakna")
                        .HasColumnType("int");

                    b.Property<string>("VlaknaObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Zasicenje")
                        .HasColumnType("int");

                    b.Property<string>("ZasicenjeObjasnjenje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZasicenjeProcenti")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("NutritivneVrednosti");
                });

            modelBuilder.Entity("Models.Pice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PiceKuvarID")
                        .HasColumnType("int");

                    b.Property<string>("SlikaPica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("PiceKuvarID");

                    b.ToTable("Pica");
                });

            modelBuilder.Entity("Models.PodTip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("TipID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipID");

                    b.ToTable("PodTipovi");
                });

            modelBuilder.Entity("Models.Sastojak", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.ToTable("Sastojci");
                });

            modelBuilder.Entity("Models.Saveti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("SavetiKuvarID")
                        .HasColumnType("int");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SavetiKuvarID");

                    b.ToTable("Saveti");
                });

            modelBuilder.Entity("Models.Slozenost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Slozenost");
                });

            modelBuilder.Entity("Models.Tip", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Tipovi");
                });

            modelBuilder.Entity("Models.Jelo", b =>
                {
                    b.HasOne("Models.NutritivneVrednosti", "NutritivneVrednosti")
                        .WithOne("Jelo")
                        .HasForeignKey("Models.Jelo", "ForeignKeyNV")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Kuvar", "Kuvar")
                        .WithMany("listaRecepata")
                        .HasForeignKey("KuvarID");

                    b.HasOne("Models.PodTip", "PodTip")
                        .WithMany("ListaJelaPodtip")
                        .HasForeignKey("PodTipID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Pice", "PreporucenoPice")
                        .WithMany("ListaJela")
                        .HasForeignKey("PreporucenoPiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Slozenost", "Slozenost")
                        .WithMany("ListaJelaSlozenost")
                        .HasForeignKey("SlozenostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kuvar");

                    b.Navigation("NutritivneVrednosti");

                    b.Navigation("PodTip");

                    b.Navigation("PreporucenoPice");

                    b.Navigation("Slozenost");
                });

            modelBuilder.Entity("Models.JeloSastojak", b =>
                {
                    b.HasOne("Models.Jelo", "Jelo")
                        .WithMany("ListaSastojaka")
                        .HasForeignKey("JeloID");

                    b.HasOne("Models.Jedinica", "KolicinaJedinica")
                        .WithMany("JeloSastojakJedinica")
                        .HasForeignKey("KolicinaJedinicaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Sastojak", "Sastojak")
                        .WithMany("ListaJela")
                        .HasForeignKey("SastojakID");

                    b.Navigation("Jelo");

                    b.Navigation("KolicinaJedinica");

                    b.Navigation("Sastojak");
                });

            modelBuilder.Entity("Models.Pice", b =>
                {
                    b.HasOne("Models.Kuvar", "PiceKuvar")
                        .WithMany("KuvarPica")
                        .HasForeignKey("PiceKuvarID");

                    b.Navigation("PiceKuvar");
                });

            modelBuilder.Entity("Models.PodTip", b =>
                {
                    b.HasOne("Models.Tip", "Tip")
                        .WithMany("PodTip")
                        .HasForeignKey("TipID");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("Models.Saveti", b =>
                {
                    b.HasOne("Models.Kuvar", "SavetiKuvar")
                        .WithMany("Saveti")
                        .HasForeignKey("SavetiKuvarID");

                    b.Navigation("SavetiKuvar");
                });

            modelBuilder.Entity("Models.Jedinica", b =>
                {
                    b.Navigation("JeloSastojakJedinica");
                });

            modelBuilder.Entity("Models.Jelo", b =>
                {
                    b.Navigation("ListaSastojaka");
                });

            modelBuilder.Entity("Models.Kuvar", b =>
                {
                    b.Navigation("KuvarPica");

                    b.Navigation("listaRecepata");

                    b.Navigation("Saveti");
                });

            modelBuilder.Entity("Models.NutritivneVrednosti", b =>
                {
                    b.Navigation("Jelo");
                });

            modelBuilder.Entity("Models.Pice", b =>
                {
                    b.Navigation("ListaJela");
                });

            modelBuilder.Entity("Models.PodTip", b =>
                {
                    b.Navigation("ListaJelaPodtip");
                });

            modelBuilder.Entity("Models.Sastojak", b =>
                {
                    b.Navigation("ListaJela");
                });

            modelBuilder.Entity("Models.Slozenost", b =>
                {
                    b.Navigation("ListaJelaSlozenost");
                });

            modelBuilder.Entity("Models.Tip", b =>
                {
                    b.Navigation("PodTip");
                });
#pragma warning restore 612, 618
        }
    }
}
